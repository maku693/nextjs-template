on:
  push:
    branches:
      - main
  pull_request:
jobs:
  yarn-install:
    runs-on: ubuntu-latest
    outputs:
      cache-dir: ${{ steps.set-cache-dir.outputs.cache-dir }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - run: echo "::set-output name=cache-dir::$(yarn cache dir)"
        id: set-cache-dir
      - uses: actions/cache@v2
        id: cache
        with:
          path: ${{ steps.set-cache-dir.outputs.cache-dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-
      - run: yarn install --frozen-lockfile
        if: steps.cache.outputs.cache-hit != 'true'
  test:
    needs: yarn-install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ${{ needs.yarn-install.outputs.cache-dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install --frozen-lockfile
      - run: yarn test
  lint:
    needs: yarn-install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ${{ needs.yarn-install.outputs.cache-dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install --frozen-lockfile
      - run: yarn lint
  build:
    needs: yarn-install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ${{ needs.yarn-install.outputs.cache-dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install --frozen-lockfile
      - run: yarn build
